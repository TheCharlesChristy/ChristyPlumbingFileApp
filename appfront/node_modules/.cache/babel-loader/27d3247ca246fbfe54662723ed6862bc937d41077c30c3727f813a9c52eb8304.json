{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Charles\\\\Desktop\\\\Projects\\\\ChristyPlumbingFileApp\\\\appfront\\\\src\\\\App\\\\Main\\\\Admin\\\\FileSystem\\\\Folder.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Folder.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Folder({\n  name,\n  contents,\n  FolderData,\n  onselect,\n  setSelecteditemurl\n}) {\n  _s();\n  const [folderid, setFolderid] = useState(FolderData.id);\n  const [foldername, setFoldername] = useState(name);\n  const [foldercontents, setFoldercontents] = useState(contents);\n  const [showContents, setShowContents] = useState(false);\n  const toggleContents = e => {\n    let target = e.target;\n    if (target.classList.contains('Folder-Header-DropDown') === false) {\n      target.childNodes.forEach(element => {\n        if (element.classList.contains('Folder-Header-DropDown')) {\n          target = element;\n        }\n      });\n    }\n    console.log(target);\n    if (!showContents) {\n      target.style.transform = 'rotate(90deg)';\n    } else {\n      target.style.transform = 'rotate(0deg)';\n    }\n    setShowContents(!showContents);\n  };\n  const ondouble = e => {\n    toggleContents(e);\n    onselect(e);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Folder\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Folder-Header\",\n      onClick: doselect,\n      onDoubleClick: ondouble,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"LHS\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Folder-Header-Icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"Folder-Header-Name\",\n          children: foldername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Folder-Header-DropDown\",\n        onClick: toggleContents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), showContents && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Folder-Contents\",\n      id: folderid,\n      children: foldercontents.map((content, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Folder-Filler\",\n        children: content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(Folder, \"pOiUQxsVIrflDIb5d0jgVHGhxQc=\");\n_c = Folder;\nexport default Folder;\nvar _c;\n$RefreshReg$(_c, \"Folder\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Folder","name","contents","FolderData","onselect","setSelecteditemurl","_s","folderid","setFolderid","id","foldername","setFoldername","foldercontents","setFoldercontents","showContents","setShowContents","toggleContents","e","target","classList","contains","childNodes","forEach","element","console","log","style","transform","ondouble","className","children","onClick","doselect","onDoubleClick","fileName","_jsxFileName","lineNumber","columnNumber","map","content","index","_c","$RefreshReg$"],"sources":["C:/Users/Charles/Desktop/Projects/ChristyPlumbingFileApp/appfront/src/App/Main/Admin/FileSystem/Folder.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Folder.css';\r\n\r\nfunction Folder({ name, contents, FolderData, onselect, setSelecteditemurl }) {\r\n    const [folderid, setFolderid] = useState(FolderData.id);\r\n    const [foldername, setFoldername] = useState(name);\r\n    const [foldercontents, setFoldercontents] = useState(contents);\r\n    const [showContents, setShowContents] = useState(false);\r\n\r\n    const toggleContents = (e) => {\r\n        let target = e.target;\r\n        if(target.classList.contains('Folder-Header-DropDown')===false) {\r\n            target.childNodes.forEach((element) => {\r\n                if(element.classList.contains('Folder-Header-DropDown')){\r\n                    target = element;\r\n                }\r\n            });\r\n        }\r\n        console.log(target);\r\n        if(!showContents) {\r\n            target.style.transform = 'rotate(90deg)';\r\n        }else{\r\n            target.style.transform = 'rotate(0deg)';\r\n        }\r\n        setShowContents(!showContents);\r\n    };\r\n\r\n    const ondouble = (e) => {\r\n        toggleContents(e);\r\n        onselect(e);\r\n    };\r\n\r\n    return (\r\n        <div className='Folder'>\r\n            <div className='Folder-Header'  onClick={doselect} onDoubleClick={ondouble}>\r\n                <div className='LHS'>\r\n                    <div className='Folder-Header-Icon'></div>\r\n                    <p className='Folder-Header-Name'>{foldername}</p>\r\n                </div>\r\n                <button className='Folder-Header-DropDown' onClick={toggleContents}></button>\r\n            </div>\r\n            {showContents && (\r\n                <div className='Folder-Contents' id={folderid}>\r\n                    {foldercontents.map((content, index) => (\r\n                        <div key={index} className='Folder-Filler'>{content}</div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Folder;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}