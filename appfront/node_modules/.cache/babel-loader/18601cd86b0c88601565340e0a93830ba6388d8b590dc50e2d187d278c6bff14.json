{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Charles\\\\Desktop\\\\Projects\\\\ChristyPlumbingFileApp\\\\appfront\\\\src\\\\App\\\\Main\\\\Admin\\\\FileSystem\\\\Folder.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Folder.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Folder({\n  name,\n  contents,\n  id\n}) {\n  _s();\n  const [folderid, setFolderid] = useState(id);\n  const [foldername, setFoldername] = useState(name);\n  const [foldercontents, setFoldercontents] = useState(contents);\n  const [showContents, setShowContents] = useState(false);\n  const toggleContents = e => {\n    if (!showContents) {\n      e.target.style.transform = 'rotate(90deg)';\n    } else {\n      e.target.style.transform = 'rotate(0deg)';\n    }\n    if (showContents) {\n      //is showing\n      let subdirs = document.getElementById(id);\n      let amount = subdirs.childNodes.length * -100;\n      subdirs.childNodes.forEach(child => {\n        child.style.transform = 'translateY(' + amount + '%)';\n      });\n      setTimeout(() => {\n        setShowContents(false);\n      }, 300);\n    } else {\n      setShowContents(true);\n      setTimeout(() => {\n        let subdirs = document.getElementById(id);\n        let amount = subdirs.childNodes.length * 100;\n        subdirs.childNodes.forEach(child => {\n          child.style.transform = 'translateY(' + amount + '%)';\n        });\n      }, 10);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Folder\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Folder-Header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Folder-Header-Name\",\n        children: foldername\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Folder-Header-DropDown\",\n        onClick: toggleContents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), showContents && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Folder-Contents\",\n      id: id,\n      children: foldercontents.map((content, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        id: index,\n        className: \"Folder-Filler\",\n        children: content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(Folder, \"weYxvh7UsxpW4BZABWz7AtylQIY=\");\n_c = Folder;\nexport default Folder;\nvar _c;\n$RefreshReg$(_c, \"Folder\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Folder","name","contents","id","_s","folderid","setFolderid","foldername","setFoldername","foldercontents","setFoldercontents","showContents","setShowContents","toggleContents","e","target","style","transform","subdirs","document","getElementById","amount","childNodes","length","forEach","child","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","content","index","_c","$RefreshReg$"],"sources":["C:/Users/Charles/Desktop/Projects/ChristyPlumbingFileApp/appfront/src/App/Main/Admin/FileSystem/Folder.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Folder.css';\r\n\r\nfunction Folder({ name, contents, id }) {\r\n    const [folderid, setFolderid] = useState(id);\r\n    const [foldername, setFoldername] = useState(name);\r\n    const [foldercontents, setFoldercontents] = useState(contents);\r\n    const [showContents, setShowContents] = useState(false);\r\n\r\n    const toggleContents = (e) => {\r\n        if(!showContents) {\r\n            e.target.style.transform = 'rotate(90deg)';\r\n        }else{\r\n            e.target.style.transform = 'rotate(0deg)';\r\n        }\r\n        if(showContents) {//is showing\r\n            let subdirs = document.getElementById(id);\r\n            let amount = subdirs.childNodes.length * -100;\r\n            subdirs.childNodes.forEach((child) => {\r\n                child.style.transform = 'translateY('+amount+'%)';\r\n            });\r\n            setTimeout(() => {\r\n                setShowContents(false);\r\n            }, 300);\r\n        }else{\r\n            setShowContents(true);\r\n            setTimeout(() => {\r\n                let subdirs = document.getElementById(id);\r\n                let amount = subdirs.childNodes.length * 100;\r\n                subdirs.childNodes.forEach((child) => {\r\n                    child.style.transform = 'translateY('+amount+'%)';\r\n                });\r\n            }, 10);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='Folder'>\r\n            <div className='Folder-Header'>\r\n                <p className='Folder-Header-Name'>{foldername}</p>\r\n                <button className='Folder-Header-DropDown' onClick={toggleContents}></button>\r\n            </div>\r\n            {showContents && (\r\n                <div className='Folder-Contents' id={id}>\r\n                    {foldercontents.map((content, index) => (\r\n                        <div key={index} id={index} className='Folder-Filler'>{content}</div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Folder;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}